version: '3'
services:
  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: wurstmeister/kafka:2.13-2.8.0
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   expose:
  #     - "9093"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  #     KAFKA_CREATE_TOPICS: "example-topic:1:1"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - zookeeper

  postgres:
    image: postgres:latest
    container_name: db_shopbillbuddy
    environment:
      POSTGRES_DB: shopbillbuddy
      POSTGRES_USER: shopbillbuddy_user
      POSTGRES_PASSWORD: shopbillbuddy_pwd
    ports:
      - "8014:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  coreutility:
    container_name: core_utility
    env_file:
      - ./coreutility/config/config.json
    ports:
      - "0.0.0.0:8013:8013"
    image: golang:alpine3.16
    command: sh /deployment/coreutility/dev.sh
    working_dir: /usr/local/go/src/ShopBillBuddy/coreutility
    volumes:
      - ./deployment:/deployment
      - ./coreutility:/usr/local/go/src/ShopBillBuddy/coreutility
      - ./common:/usr/local/go/src/ShopBillBuddy/common

  customer:
    container_name: customer
    env_file:
      - ./customer/config/config.json
    ports:
      - "0.0.0.0:8012:8012"
    image: golang:alpine3.16
    command: sh /deployment/customer/dev.sh
    working_dir: /usr/local/go/src/ShopBillBuddy/customer
    volumes:
      - ./deployment:/deployment
      - ./customer:/usr/local/go/src/ShopBillBuddy/customer
      - ./common:/usr/local/go/src/ShopBillBuddy/common

  product:
    container_name: product
    env_file:
      - ./product/config/config.json
    ports:
      - "0.0.0.0:8011:8011"
    image: golang:alpine3.16
    command: sh /deployment/product/dev.sh
    working_dir: /usr/local/go/src/ShopBillBuddy/product
    volumes:
      - ./deployment:/deployment
      - ./product:/usr/local/go/src/ShopBillBuddy/product
      - ./common:/usr/local/go/src/ShopBillBuddy/common


  shop:
    container_name: shop
    env_file:
      - ./shop/config/config.json
    ports:
      - "0.0.0.0:8010:8010"
    image: golang:alpine3.16
    command: sh /deployment/shop/dev.sh
    working_dir: /usr/local/go/src/ShopBillBuddy/shop
    volumes:
      - ./deployment:/deployment
      - ./shop:/usr/local/go/src/ShopBillBuddy/shop
      - ./common:/usr/local/go/src/ShopBillBuddy/common
    

volumes:
  postgres-data: